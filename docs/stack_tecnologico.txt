### üß± **Backend:**

* **Lenguaje:** Java
* **Framework:** Spring Boot
* **Controladores REST:** Spring Web
* **Documentaci√≥n de API:** Swagger / Springdoc OpenAPI
* **Seguridad (a futuro o parcial):** Spring Security
* **ORM / Persistencia:** Spring Data JPA
* **Base de Datos:** MySQL
* **Gesti√≥n de dependencias:** Maven
* **Pruebas:** JUnit (y posiblemente Mockito para mocks)
* **IDE:** Visual Studio Code

---

### üßë‚Äçüé® **Frontend:**

* **Tecnolog√≠a:** HTML, CSS, JavaScript
* **Frameworks/librer√≠as:** No se especific√≥ uno a√∫n, pero est√°s manejando las vistas con archivos HTML (podr√≠as sumar React o Vue si lo deseas)
* **Consumo de API REST:** fetch/AJAX desde JS

---

### ‚öôÔ∏è **Infraestructura / DevOps / Herramientas:**

* **Control de versiones:** Git + GitHub
* **Gesti√≥n de tareas:** Issues de GitHub (y Trello mencionado)
* **Swagger UI:** para probar endpoints
* **MySQL Workbench:** para gesti√≥n de base de datos

---